package com.pidevv;


import static com.codename1.ui.CN.*;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.system.Lifecycle;
import com.codename1.ui.Display;
import com.codename1.ui.FontImage;
import com.codename1.ui.Toolbar;
import com.mycompany.gui.AjoutCategoryScreen;
import com.mycompany.gui.AjoutReclamationForm;
import com.mycompany.gui.CategorieScreeen;
import com.mycompany.gui.MapForm;
import com.codename1.ui.util.*;
import com.sun.glass.ui.Application;
/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication extends Lifecycle {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
 
public void start() {
    if (current != null) {
        current.show();
        return;
    }
    AjoutReclamationForm ajoutReclamationForm = new AjoutReclamationForm(theme);
    ajoutReclamationForm.show();
    current = ajoutReclamationForm;
    
    categorieScreen = new CategorieScreeen(this);
    ajoutCategoryScreen = new AjoutCategoryScreen(this);
//    // show the AjoutCategoryScreen form
//    ajoutCategoryScreen.show();
        
        //houni awl interface yet7al
//        new MapForm(); //n7oto signup bch yjibha awl form
       // new SignInForm(theme).show();
    }


    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
         categorieScreen.show();
    }
    
    public void destroy() {
    }
    
     CategorieScreeen categorieScreen;
    AjoutCategoryScreen ajoutCategoryScreen;
    
    

    public void runApp() {
        
   
        
     
    }
    public void showForm(Form form){
       if (form != null) {
        form.show();
    }
         
    }
    public void addDrawerMenu(Form form){
        Toolbar drawer=form.getToolbar();
//            if (drawer == null) {
            drawer = new Toolbar();
            form.setToolbar(drawer);
              System.out.println("Adding side menu to form ");
//        }
      
         drawer.addMaterialCommandToSideMenu("rec",FontImage.MATERIAL_DASHBOARD, e->{showForm(new AjoutReclamationForm(theme));});
         drawer.addMaterialCommandToSideMenu("CATEGORY",FontImage.MATERIAL_DASHBOARD, e->{showForm(categorieScreen);});
          drawer.addMaterialCommandToSideMenu("ADD CATEGORY",FontImage.MATERIAL_DASHBOARD, e->{showForm(ajoutCategoryScreen);});
    }
    
    
    
     private static MyApplication instance = null;
     
      public static MyApplication getInstance() {
        if (instance == null) {
            instance = new MyApplication();
        }
        return instance;
    }

}
